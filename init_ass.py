import os
import io
import re

filename = ['src.md', 'target.ass']

# Parts of md syntax
match_rules = {'H1': r'#\s+(.*?)\n', }

# ass file metadata
meta_header = ['[Script Info]', '; ASS Generated by Mdsub', 'Title: %s', \
	'ScriptType: v4.00+', 'Collisions: Reverse', 'WrapStyle: 0', 'ScaledBorderAndShadow: yes',\
	'YCbCr Matrix: None']

# ass style metadata
meta_style = ['[V4+ Styles]', 'Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, '
	'OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, '
	'ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, ' 
	'MarginL, MarginR, MarginV, Encoding', 
	'Style: %s', 'Style: %s']

# ass events metadata
meta_events = ['[Events]', 'Format: Layer, Start, End, Style, Name, '
	'MarginL, MarginR, MarginV, Effect, Text']

# STYLES
plain_style = ['Plain', 'Arial', '24', '&H00FFFFFF', '&H000000FF', '&HFF000000', '&HFF000000'\
	'0', '0', '0', '0', '100', '100', '0', '0', '1', '0', '0', '2', '15', '15', '35', '1']

# code_style = []


def Write_ass(title: str, styles: list, ):
	meta_header[2] = meta_header[2] % title
	for i in range(2, 2 + len(styles)):
		meta_style[i] = meta_style[i] % ','.join(styles[i - 2])
	
	
	print(meta_header[2])
	print(meta_style)
	
	with open(filename[1], 'w', encoding='utf-8') as target_ass:
		target_ass.write('\n'.join(meta_header) + '\n\n')
		target_ass.write('\n'.join(meta_style) + '\n\n')
		target_ass.write('\n'.join(meta_events) + '\n')
		
		
	print('Ass write OK.')
	

with open(filename[0], 'r', encoding='utf-8') as src_md:
	# title = src_md.readline()
	# if title = re.match(match_rules['H1'], src_md.readline())
	try:
		title = re.match(match_rules['H1'], src_md.readline()).group(1)
	except AttributeError:
		title = 'Mdsub Default Title'
		src_md.seek(0, io.SEEK_SET)
		
		# print('No found sub title.', src_md.readline())
		# src_md.seek(0, io.SEEK_SET)
	
	
	
	Write_ass(title, [plain_style])